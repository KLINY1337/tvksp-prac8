[versions]
guava = "32.1.3-jre"
junit-jupiter = "5.10.1"
h2 = "2.3.230"
spring-boot = "3.3.5"
spring-jdbc = "6.1.14"
zaxxer-hikari-cp = "6.0.0"
lombok = "1.18.32"
liquibase-core = "4.29.2"
openapi-generator = "7.8.0"
jackson-annotations = "2.18.1"
jakarta-annotations-api = "3.0.0"
springdoc-openapi-ui = "1.8.0"
swagger-annotations = "2.2.25"
spring-web = "6.1.14"
spring-webmvc = "6.1.14"
jakarta-validation-api = "3.1.0"
feign-core = "13.5"
feign-java11 = "13.5"
feign-slf4j = "13.5"
jackson-databind = "2.18.1"
spring-cloud = "4.1.3"
postgresql = "42.7.4"
spring-kafka = "3.3.0"

[libraries]
guava = { module = "com.google.guava:guava", version.ref = "guava" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit-jupiter" }
h2 = { module = "com.h2database:h2", version.ref = "h2" }
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "spring-boot" }
spring-boot-starter-jdbc = { module = "org.springframework.boot:spring-boot-starter-jdbc", version.ref = "spring-boot" }
spring-boot = { module = "org.springframework.boot:spring-boot", version.ref = "spring-boot" }
spring-jdbc = { module = "org.springframework:spring-jdbc", version.ref="spring-jdbc" }
spring-boot-autoconfigure = { module = "org.springframework.boot:spring-boot-autoconfigure", version.ref = "spring-boot" }
zaxxer-hikari-cp = { module = "com.zaxxer:HikariCP", version.ref = "zaxxer-hikari-cp" }
lombok = { module = "org.projectlombok:lombok", version.ref = "lombok" }
liquibase-core = { module = "org.liquibase:liquibase-core", version.ref = "liquibase-core" }
jackson-annotations = { module = "com.fasterxml.jackson.core:jackson-annotations", version.ref = "jackson-annotations"}
jakarta-annotations-api = { module = "jakarta.annotation:jakarta.annotation-api", version.ref = "jakarta-annotations-api" }
springdoc-openapi-ui = { module = "org.springdoc:springdoc-openapi-uibl", version.ref = "springdoc-openapi-ui" }
swagger-annotations = { module = "io.swagger.core.v3:swagger-annotations", version.ref = "swagger-annotations" }
spring-web = { module = "org.springframework:spring-web", version.ref = "spring-web" }
spring-webmvc = { module = "org.springframework:spring-webmvc", version.ref = "spring-webmvc" }
jakarta-validation-api = { module = "jakarta.validation:jakarta.validation-api", version.ref = "jakarta-validation-api" }
feign-core = { module = "io.github.openfeign:feign-core", version.ref = "feign-core" }
feign-java11 = { module = "io.github.openfeign:feign-java11", version.ref = "feign-java11"}
feign-slf4j = { module = "io.github.openfeign:feign-slf4j", version.ref = "feign-slf4j" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson-databind" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "spring-boot" }
spring-boot-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "spring-boot" }
spring-cloud-starter-openfeign = { module = "org.springframework.cloud:spring-cloud-starter-openfeign", version.ref = "spring-cloud" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
spring-boot-configurationProcessor = { module = "org.springframework.boot:spring-boot-configuration-processor", version.ref = "spring-boot" }
spring-kafka = { module = "org.springframework.kafka:spring-kafka", version.ref = "spring-kafka" }

[plugins]
springframework-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
openapi-generator = { id = "org.openapi.generator", version.ref = "openapi-generator" }